@model Intro.Models.ViewModels.VM_UserRegister

@{
    ViewBag.Title = "Account Register";
}

<h2>Account Register</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirmation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.PasswordConfirmation, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register User" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Model.Password))
{
    <script>
        const pass = document.querySelector("#Password");
        pass.value = "@Model.Password";

    </script>
}

@if (!string.IsNullOrEmpty(Model.PasswordConfirmation))
{
    <script>
        const passConfirm = document.querySelector("#PasswordConfirmation");
        passConfirm.value = "@Model.PasswordConfirmation";

    </script>
}
